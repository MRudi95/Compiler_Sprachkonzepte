//
// exp.grammar: example grammar based on simple expressions
// To build:
//      sablecc exp.grammar
//      javac Eval.java
//

Helpers
   digit = ['0'..'9'];
   space = ' ';
   newline = 10;

Tokens

   lparen = '(';
   rparen = ')';
   plus   = '+';
   minus  = '-';
   times  = '*';
   div    = '/';

   number = digit+;
   whitespace = (space | newline)*;

Ignored Tokens
   whitespace;

Productions

   klam   = lparen op [first]:term [second]:term+ rparen
          ;
   op     = {add} plus
          | {sub} minus
          | {mul} times
          | {div} div
          ;
   term   = {klam} klam
          | {num} number
          ;
